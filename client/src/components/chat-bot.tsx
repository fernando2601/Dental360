import { useState, useRef, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { ScrollArea } from "@/components/ui/scroll-area";
import { MessageSquare, Send, User, Bot, Gift, MoreHorizontal, Calendar, Info, ThumbsUp } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import { formatTimeAgo } from "@/lib/utils";

// Defini√ß√£o dos diferentes tipos de fluxos de trabalho
type WorkflowType = 
  | 'initial' 
  | 'priceInquiry' 
  | 'serviceDetails' 
  | 'schedulingProcess' 
  | 'fearAndAnxiety' 
  | 'financialConcerns'
  | 'aestheticConcerns'
  | 'emergencyCase'
  | 'followUp';

// Interface para rastrear o estado do fluxo de trabalho
interface WorkflowState {
  type: WorkflowType;
  step: number;
  data: {
    service?: string;
    price?: number;
    preferredDate?: string;
    preferredTime?: string;
    concernType?: string;
    urgencyLevel?: 'low' | 'medium' | 'high';
    followUpDate?: Date;
    [key: string]: any; // Para dados adicionais espec√≠ficos do fluxo
  };
}

// Tipagem para as mensagens
type Message = {
  id: string;
  sender: 'user' | 'bot';
  content: string;
  timestamp: Date;
  confidence?: number;
  hasCoupon?: boolean;
  sentiment?: 'positive' | 'negative' | 'neutral';
  showServicesInfo?: boolean;
  showScheduleInfo?: boolean;
  showClinicInfo?: boolean;
  // Campos adicionais para o workflow
  workflowAction?: string;
  workflowOptions?: string[];
  workflowType?: WorkflowType;
  expectsInput?: boolean;
  isWorkflowStep?: boolean;
};

// Componente de Chatbot
export function ChatBot() {
  const [input, setInput] = useState("");
  const [messages, setMessages] = useState<Message[]>([]);
  const [isTyping, setIsTyping] = useState(false);
  const [workflow, setWorkflow] = useState<WorkflowState | null>(null);
  const [lastInteractionTime, setLastInteractionTime] = useState(Date.now());

  const messagesEndRef = useRef<HTMLDivElement>(null);
  const { toast } = useToast();

  // Efeito para inicializar o chatbot com uma mensagem de boas-vindas
  useEffect(() => {
    // Adiciona a mensagem de boas-vindas inicial
    if (messages.length === 0) {
      setMessages([
        {
          id: "welcome-message",
          sender: "bot",
          content: "Ol√°! üòä Bem-vindo √† nossa cl√≠nica de harmoniza√ß√£o e odontologia. Como voc√™ est√° hoje?",
          timestamp: new Date(),
          sentiment: "neutral"
        }
      ]);
    }
  }, [messages]);

  // Rola para a mensagem mais recente sempre que novas mensagens s√£o adicionadas
  useEffect(() => {
    if (messagesEndRef.current) {
      messagesEndRef.current.scrollIntoView({ behavior: "smooth" });
    }
  }, [messages]);

  // Sistema de palavras-chave para respostas
  // Mapeamento de palavras-chave para respostas espec√≠ficas
  const keywordResponses: Record<string, string[]> = {
    // Palavras relacionadas a dentes
    "dente": [
      "Seu sorriso merece o melhor cuidado! üòÅ Somos especialistas em transformar sorrisos. Podemos agendar uma avalia√ß√£o sem compromisso?",
      "Cuidar dos dentes √© investir em sa√∫de e autoestima! ‚ú® Temos as t√©cnicas mais modernas para garantir seu conforto. Posso te contar mais?",
      "Problemas nos dentes? Relaxa, temos profissionais premiados prontos para cuidar de voc√™! Que tal conhecer nossos tratamentos?"
    ],
    "dental": [
      "Est√©tica dental √© nossa especialidade! ‚ú® Transformamos sorrisos com t√©cnicas de ponta. Quer saber mais sobre nossos tratamentos?",
      "Estamos entre os melhores em tratamentos dentais da regi√£o! üèÜ Mais de 500 pacientes satisfeitos todo m√™s. Quer fazer parte dessa estat√≠stica?"
    ],
    "sorriso": [
      "Um sorriso bonito abre portas! üòÅ E nossos especialistas s√£o mestres em criar sorrisos perfeitos. Posso te mostrar alguns antes/depois?",
      "Seu sorriso √© seu cart√£o de visitas! ‚ú® Nossas t√©cnicas avan√ßadas garantem resultados incr√≠veis. Que tal uma avalia√ß√£o gratuita?",
      "Transformar sorrisos √© nossa paix√£o! üí´ J√° ajudamos mais de 10.000 pessoas a sorrirem com confian√ßa. Podemos te ajudar tamb√©m!"
    ],
    "branco": [
      "Dentes brancos e brilhantes em poucas sess√µes! ‚ú® Nosso clareamento possui tecnologia de ponta com resultados imediatos. Temos uma promo√ß√£o especial hoje!",
      "Quem n√£o quer aquele sorriso branquinho? üòÅ Nosso tratamento √© r√°pido, seguro e com resultados incr√≠veis! Aproveite nossa oferta especial!"
    ],
    "siso": [
      "Extra√ß√£o de siso sem sofrimento? üòå Aqui na cl√≠nica voc√™ encontra! Nossos especialistas usam t√©cnicas modernas que tornam o procedimento mais confort√°vel.",
      "Siso dando trabalho? Temos os melhores especialistas para cuidar disso! Procedimento r√°pido, seguro e com p√≥s-operat√≥rio tranquilo."
    ],
    "harmoniza√ß√£o": [
      "Nossa harmoniza√ß√£o facial √© refer√™ncia! üíé Resultados naturais que real√ßam sua beleza sem exageros. Quer conhecer nosso portf√≥lio?",
      "Harmoniza√ß√£o facial de qualidade faz toda diferen√ßa! ‚ú® Nossos profissionais s√£o premiados e especialistas em resultados naturais."
    ],
    "botox": [
      "Botox aplicado por especialistas certificados! üèÜ T√©cnica precisa e resultados que valorizam sua express√£o natural. Temos hor√°rios esta semana!",
      "Rejuvenescer com naturalidade √© poss√≠vel! üòä Nosso botox tem a medida certa para suavizar linhas sem congelar express√µes."
    ],
    "canal": [
      "Canal hoje em dia √© procedimento tranquilo! üòå T√©cnicas modernas e anestesia de qualidade para voc√™ n√£o sentir nada.",
      "Dor de dente pode ser sinal que precisa de canal! Mas calma, na nossa cl√≠nica √© procedimento r√°pido e sem sofrimento."
    ],
    "aparelho": [
      "Temos todas as op√ß√µes de aparelhos! üòÅ Desde os tradicionais at√© os invis√≠veis. Transforme seu sorriso com tecnologia avan√ßada!",
      "Aparelho n√£o precisa ser desconfort√°vel! Nossas op√ß√µes modernas s√£o discretas e super eficientes."
    ],
    "limpeza": [
      "Limpeza profissional √© fundamental! ‚ú® Remove manchas e previne problemas. Nosso ultrassom de √∫ltima gera√ß√£o faz toda diferen√ßa!",
      "Uma boa limpeza deixa os dentes branquinhos na hora! E o melhor, evita problemas futuros mais s√©rios. Vamos agendar?"
    ]
  };

  // Inicia um fluxo de trabalho espec√≠fico
  const startWorkflow = (type: WorkflowType, initialData: Record<string, any> = {}) => {
    setWorkflow({
      type,
      step: 0,
      data: { ...initialData }
    });
    
    // Adiciona a primeira mensagem do fluxo
    let firstMessage: Message = {
      id: Date.now().toString(),
      sender: 'bot',
      content: 'Vamos iniciar um novo atendimento!',
      timestamp: new Date(),
      sentiment: 'neutral',
      workflowType: type,
      isWorkflowStep: true
    };
    
    switch (type) {
      case 'priceInquiry':
        firstMessage.content = 'Sobre qual procedimento voc√™ gostaria de saber o pre√ßo?';
        firstMessage.expectsInput = true;
        break;
      case 'serviceDetails':
        firstMessage.content = 'Qual servi√ßo voc√™ gostaria de conhecer melhor?';
        firstMessage.expectsInput = true;
        break;
      case 'schedulingProcess':
        firstMessage.content = 'Vamos agendar sua consulta! Qual procedimento voc√™ deseja realizar?';
        firstMessage.expectsInput = true;
        break;
      case 'fearAndAnxiety':
        firstMessage.content = 'Entendo sua preocupa√ß√£o. Muitas pessoas t√™m ansiedade com procedimentos odontol√≥gicos. Pode me contar mais sobre o que te deixa apreensivo?';
        firstMessage.expectsInput = true;
        break;
      case 'financialConcerns':
        firstMessage.content = 'Temos v√°rias op√ß√µes para facilitar seu tratamento. Qual procedimento voc√™ est√° considerando fazer?';
        firstMessage.expectsInput = true;
        break;
      case 'aestheticConcerns':
        firstMessage.content = 'Conte-me o que voc√™ gostaria de melhorar no seu sorriso:';
        firstMessage.expectsInput = true;
        break;
      case 'emergencyCase':
        firstMessage.content = 'Estamos prontos para te ajudar! Qual √© a urg√™ncia que voc√™ est√° enfrentando?';
        firstMessage.expectsInput = true;
        break;
      default:
        firstMessage.content = 'Como posso ajudar voc√™ hoje?';
        firstMessage.expectsInput = true;
    }
    
    setMessages(prev => [...prev, firstMessage]);
  };

  // Processa respostas no contexto de um fluxo de trabalho ativo
  const processWorkflowResponse = (userText: string): Message | null => {
    if (!workflow) return null;
    
    const lowerText = userText.toLowerCase();
    
    switch (workflow.type) {
      case 'priceInquiry':
        // Fluxo de consulta de pre√ßos
        if (workflow.step === 0) {
          // Armazena o servi√ßo consultado
          const service = userText;
          setWorkflow(prev => prev ? { ...prev, step: 1, data: { ...prev.data, service } } : null);
          
          // Identifica o pre√ßo baseado no servi√ßo mencionado
          let price = 0;
          let confidence = 0;
          
          if (lowerText.includes("clareamento") || lowerText.includes("branqueamento")) {
            price = 800;
            confidence = 95;
          } 
          else if (lowerText.includes("siso") || lowerText.includes("ju√≠zo") || lowerText.includes("extrair dente")) {
            price = 450;
            confidence = 90;
          }
          else if (lowerText.includes("canal")) {
            price = 950;
            confidence = 95;
          }
          else if (lowerText.includes("limpeza") || lowerText.includes("profilaxia")) {
            price = 250;
            confidence = 95;
          }
          else if (lowerText.includes("aparelho")) {
            price = 2500;
            confidence = 80;
          }
          else if (lowerText.includes("botox") || lowerText.includes("toxina botul√≠nica")) {
            price = 1200;
            confidence = 95;
          }
          else if (lowerText.includes("harmoniza√ß√£o") || lowerText.includes("harmonizacao") || lowerText.includes("preenchedores")) {
            price = 3000;
            confidence = 90;
          }
          else if (lowerText.includes("faceta") || lowerText.includes("lente")) {
            price = 1500;
            confidence = 90;
          }
          else if (lowerText.includes("restaura√ß√£o") || lowerText.includes("restauracao") || lowerText.includes("obtura√ß√£o")) {
            price = 350;
            confidence = 90;
          }
          else {
            price = 500;
            confidence = 60;
          }
          
          return {
            id: Date.now().toString(),
            sender: 'bot',
            content: `Para ${service}, o investimento √© em torno de R$${price.toFixed(2)}.\n\nEsse valor pode variar dependendo da sua necessidade espec√≠fica ap√≥s uma avalia√ß√£o. Que tal agendar uma consulta sem compromisso para um or√ßamento personalizado?`,
            timestamp: new Date(),
            confidence: confidence,
            sentiment: 'neutral',
            workflowType: 'priceInquiry',
            isWorkflowStep: true
          };
        }
        return null;
        
      case 'serviceDetails':
        // Fluxo de detalhes de servi√ßo
        if (workflow.step === 0) {
          // Identifica o servi√ßo
          const service = userText;
          setWorkflow(prev => prev ? { ...prev, step: 1, data: { ...prev.data, service } } : null);
          
          if (lowerText.includes("clareamento") || lowerText.includes("branqueamento")) {
            return {
              id: Date.now().toString(),
              sender: 'bot',
              content: "Nosso clareamento √© feito com tecnologia de ponta e gel de alta concentra√ß√£o, ativado por luz LED. O procedimento dura cerca de 1 hora e voc√™ j√° sai com resultado vis√≠vel! Os dentes ficam at√© 8 tons mais claros.\n\nInclu√≠mos tamb√©m uma moldeira personalizada para manuten√ß√£o em casa, o que prolonga muito o resultado!\n\nTemos um super desconto para quem agenda essa semana. Quer aproveitar?",
              timestamp: new Date(),
              sentiment: 'neutral',
              workflowType: 'serviceDetails',
              isWorkflowStep: true
            };
          }
          else if (lowerText.includes("siso") || lowerText.includes("ju√≠zo") || lowerText.includes("extrair dente")) {
            return {
              id: Date.now().toString(),
              sender: 'bot',
              content: "A extra√ß√£o de siso √© realizada por nossos cirurgi√µes especialistas, com anestesia de qualidade e t√©cnicas modernas que reduzem o trauma e o desconforto p√≥s-operat√≥rio.\n\nO procedimento dura em m√©dia 30 minutos por dente, e utilizamos materiais que ajudam na cicatriza√ß√£o mais r√°pida.\n\nFornecemos todas as orienta√ß√µes p√≥s-operat√≥rias e medica√ß√£o analg√©sica e anti-inflamat√≥ria para garantir sua recupera√ß√£o tranquila.\n\nPodemos agendar sua avalia√ß√£o?",
              timestamp: new Date(),
              sentiment: 'neutral',
              workflowType: 'serviceDetails',
              isWorkflowStep: true
            };
          }
          else if (lowerText.includes("canal")) {
            return {
              id: Date.now().toString(),
              sender: 'bot',
              content: "Nosso tratamento de canal √© realizado com instrumentos automatizados que tornam o procedimento muito mais r√°pido e confort√°vel que antigamente!\n\nUsamos anestesia potente e t√©cnicas que garantem que voc√™ n√£o sinta dor. Na maioria dos casos, conseguimos finalizar em apenas uma sess√£o.\n\nDe acordo com sua necessidade, j√° fazemos a restaura√ß√£o definitiva, deixando o dente protegido e funcional.\n\nQuer agendar uma avalia√ß√£o para vermos seu caso espec√≠fico?",
              timestamp: new Date(),
              sentiment: 'neutral',
              workflowType: 'serviceDetails',
              isWorkflowStep: true
            };
          }
          else {
            return {
              id: Date.now().toString(),
              sender: 'bot',
              content: `Nosso procedimento de ${service} √© realizado com t√©cnicas avan√ßadas e materiais de primeira linha.\n\nNossos profissionais s√£o especializados e possuem vasta experi√™ncia, garantindo resultados excepcionais com o m√°ximo de conforto para voc√™.\n\nQuer agendar uma avalia√ß√£o para conhecer mais detalhes e receber um plano personalizado?`,
              timestamp: new Date(),
              sentiment: 'neutral',
              workflowType: 'serviceDetails',
              isWorkflowStep: true
            };
          }
        }
        return null;
        
      case 'schedulingProcess':
        // Implementa√ß√£o do fluxo de agendamento
        if (workflow.step === 0) {
          const service = userText;
          setWorkflow(prev => prev ? { ...prev, step: 1, data: { ...prev.data, service } } : null);
          
          return {
            id: Date.now().toString(),
            sender: 'bot',
            content: `√ìtima escolha! Para ${service}, temos disponibilidade nos pr√≥ximos dias. Qual seria sua prefer√™ncia de data?`,
            timestamp: new Date(),
            sentiment: 'neutral',
            workflowType: 'schedulingProcess',
            isWorkflowStep: true,
            expectsInput: true
          };
        }
        else if (workflow.step === 1) {
          const preferredDate = userText;
          setWorkflow(prev => prev ? { ...prev, step: 2, data: { ...prev.data, preferredDate } } : null);
          
          return {
            id: Date.now().toString(),
            sender: 'bot',
            content: `Perfeito! Para o dia ${preferredDate}, temos hor√°rios pela manh√£ (8h-12h) e tarde (14h-18h). Qual hor√°rio seria melhor para voc√™?`,
            timestamp: new Date(),
            sentiment: 'neutral',
            workflowType: 'schedulingProcess',
            isWorkflowStep: true,
            expectsInput: true
          };
        }
        else if (workflow.step === 2) {
          const preferredTime = userText;
          setWorkflow(prev => prev ? { ...prev, step: 3, data: { ...prev.data, preferredTime } } : null);
          
          const service = workflow.data.service || "";
          const date = workflow.data.preferredDate || "";
          
          return {
            id: Date.now().toString(),
            sender: 'bot',
            content: `Excelente! Vou reservar para voc√™:\n\n‚Ä¢ Procedimento: ${service}\n‚Ä¢ Data: ${date}\n‚Ä¢ Hor√°rio: ${preferredTime}\n\nNosso consult√≥rio est√° localizado na Av. Paulista, 1578 - Bela Vista.\n\nPoderia me informar seu nome completo e telefone para confirmarmos o agendamento?`,
            timestamp: new Date(),
            sentiment: 'neutral',
            workflowType: 'schedulingProcess',
            isWorkflowStep: true,
            expectsInput: true,
            showScheduleInfo: true
          };
        }
        else if (workflow.step === 3) {
          // Reseta o workflow ap√≥s finalizar
          setWorkflow(null);
          
          return {
            id: Date.now().toString(),
            sender: 'bot',
            content: "Agendamento conclu√≠do com sucesso! Acabei de enviar uma confirma√ß√£o para seu telefone com todos os detalhes.\n\nLembre-se de chegar 10 minutos antes para o preenchimento da ficha. Estamos ansiosos para cuidar do seu sorriso!\n\nPosso ajudar com mais alguma coisa?",
            timestamp: new Date(),
            sentiment: 'neutral'
          };
        }
        return null;
        
      // Outros casos de fluxo podem ser adicionados aqui
      case 'fearAndAnxiety':
        if (workflow.step === 0) {
          const concernType = userText;
          setWorkflow(prev => prev ? { ...prev, step: 1, data: { ...prev.data, concernType } } : null);
          
          return {
            id: Date.now().toString(),
            sender: 'bot',
            content: "Entendo completamente sua preocupa√ß√£o, e voc√™ n√£o est√° sozinho(a). Muitos dos nossos pacientes chegam com receios semelhantes.\n\nNossa cl√≠nica √© especializada em atendimento humanizado e acolhedor. Utilizamos anestesia de alta qualidade, com aplica√ß√£o indolor e t√©cnicas que respeitam seu tempo e conforto.\n\nPodemos come√ßar com uma simples conversa na cl√≠nica, sem nenhum procedimento, apenas para voc√™ conhecer nossa equipe e se sentir mais confort√°vel. O que acha?",
            timestamp: new Date(),
            sentiment: 'neutral',
            workflowType: 'fearAndAnxiety',
            isWorkflowStep: true
          };
        }
        return null;
        
      default:
          startWorkflow('initial', {});
          return null;
    }
  };

  // Gera respostas humanizadas com base no script e no sentimento
  const generateHumanizedResponse = (userText: string, sentiment: 'positive' | 'negative' | 'neutral'): Message => {
    const lowerText = userText.toLowerCase();
    
    // Atualiza o tempo da √∫ltima intera√ß√£o
    setLastInteractionTime(Date.now());
    
    // Log para depura√ß√£o
    console.log("Texto recebido:", userText);
    console.log("Texto convertido para min√∫sculo:", lowerText);
    
    // Primeiro verifica se estamos em um fluxo de trabalho ativo
    const workflowResponse = processWorkflowResponse(userText);
    if (workflowResponse) {
      return workflowResponse;
    }
    
    // Verifica palavras-chave isoladas antes de tudo
    for (const keyword in keywordResponses) {
      if (lowerText.includes(keyword)) {
        console.log(`Palavra-chave isolada encontrada: ${keyword}`);
        // Escolhe aleatoriamente uma das respostas dispon√≠veis para essa palavra-chave
        const responses = keywordResponses[keyword];
        const randomIndex = Math.floor(Math.random() * responses.length);
        return {
          id: Date.now().toString(),
          sender: 'bot',
          content: responses[randomIndex],
          timestamp: new Date(),
          sentiment: 'neutral'
        };
      }
    }
    
    // Respostas espec√≠ficas para perguntas sobre procedimentos dent√°rios
    // Novas respostas adicionadas conforme solicitado pelo cliente
    if (lowerText.includes("siso") || lowerText.includes("ju√≠zo") || lowerText.includes("juizo")) {
      if (lowerText.includes("tirar") || lowerText.includes("arrancar") || lowerText.includes("extrair") || lowerText.includes("extra√≠")) {
        return {
          id: Date.now().toString(),
          sender: 'bot',
          content: "Claro! E olha, tirar o siso com a gente √© super tranquilo, viu? Temos t√©cnicas modernas que deixam o procedimento r√°pido e confort√°vel. Quer que eu te passe uma oferta especial para extra√ß√£o hoje? üòÅ",
          timestamp: new Date(),
          sentiment: 'neutral'
        };
      }
      
      if (lowerText.includes("cara inchada") || lowerText.includes("incha√ßo") || lowerText.includes("inchado")) {
        return {
          id: Date.now().toString(),
          sender: 'bot',
          content: "Provavelmente √© o siso, sim! üò¨ Mas n√£o se preocupe, a gente faz a avalia√ß√£o e resolve isso com todo cuidado pra voc√™ sair aliviado(a)!",
          timestamp: new Date(),
          sentiment: 'neutral'
        };
      }
    }
    
    // Resposta espec√≠fica para "Meu dente t√° podre" e varia√ß√µes
    if (lowerText === "meu dente t√° podre" || lowerText === "meu dente ta podre" || 
        lowerText.includes("meu dente t√° podre") || lowerText.includes("meu dente ta podre") ||
        ((lowerText.includes("dente") || lowerText.includes("dental")) && 
        (lowerText.includes("podre") || lowerText.includes("estragado") || lowerText.includes("t√° podre") || lowerText.includes("ta podre")))) {
      return {
        id: Date.now().toString(),
        sender: 'bot',
        content: "Fica tranquilo(a)! N√≥s somos especialistas em salvar sorrisos! ‚ù§Ô∏è D√° pra restaurar ou at√© reconstruir o dente, dependendo do caso. Vamos agendar uma avalia√ß√£o sem compromisso?",
        timestamp: new Date(),
        sentiment: 'neutral'
      };
    }
    
    if (lowerText.includes("consertar") && lowerText.includes("sorriso")) {
      return {
        id: Date.now().toString(),
        sender: 'bot',
        content: "D√° SIM e vai ficar incr√≠vel! ‚ú® Trabalhamos com est√©tica dental de √∫ltima gera√ß√£o para devolver a confian√ßa no seu sorriso. Vamos marcar um hor√°rio para ver o que combina mais com voc√™?",
        timestamp: new Date(),
        sentiment: 'neutral'
      };
    }
    
    if (lowerText.includes("dente quebrado") || (lowerText.includes("dente") && lowerText.includes("quebrou"))) {
      return {
        id: Date.now().toString(),
        sender: 'bot',
        content: "Calma, estamos aqui pra te ajudar! üõü Conseguimos restaurar o dente rapidinho e deixar seu sorriso novinho em folha! Quer que eu veja o melhor hor√°rio pra te encaixar hoje mesmo?",
        timestamp: new Date(),
        sentiment: 'neutral'
      };
    }
    
    if ((lowerText.includes("sorriso") && lowerText.includes("branc")) || lowerText.includes("clareamento")) {
      return {
        id: Date.now().toString(),
        sender: 'bot',
        content: "J√° pensou sair com aquele sorriso de revista? üì∏ A gente faz clareamento profissional seguro e com resultados incr√≠veis. E hoje tem oferta especial, quer aproveitar?",
        timestamp: new Date(),
        sentiment: 'neutral'
      };
    }
    
    if ((lowerText.includes("d√≥i") || lowerText.includes("doi") || lowerText.includes("dor")) && lowerText.includes("arrancar")) {
      return {
        id: Date.now().toString(),
        sender: 'bot',
        content: "Pode ficar tranquilo(a)! Usamos anestesia potente e t√©cnicas modernas pra voc√™ nem sentir! üí§ A maioria dos pacientes at√© se surpreende de t√£o tranquilo que √©. Vamos agendar?",
        timestamp: new Date(),
        sentiment: 'neutral'
      };
    }
    
    if (lowerText.includes("dente") && (lowerText.includes("doendo") || lowerText.includes("d√≥i") || lowerText.includes("doi") || lowerText.includes("dor"))) {
      return {
        id: Date.now().toString(),
        sender: 'bot',
        content: "Dor de dente ningu√©m merece! üò¢ Vamos cuidar de voc√™ com todo carinho, sem sofrimento. Nossa prioridade √© acabar com essa dor o mais r√°pido poss√≠vel. Que tal um atendimento priorit√°rio?",
        timestamp: new Date(),
        sentiment: 'neutral'
      };
    }
    
    // Verifica se √© uma resposta sobre como o usu√°rio est√° se sentindo (logo ap√≥s a primeira mensagem)
    if (messages.length === 1 || 
        (messages[messages.length-2]?.content.includes("Como voc√™ est√° hoje?") && 
         messages[messages.length-1].sender === 'user')) {
      
      if (sentiment === 'positive') {
        return {
          id: Date.now().toString(),
          sender: 'bot',
          content: "Que alegria! üòç Vamos deixar seu sorriso ainda mais incr√≠vel para combinar com esse seu astral!\n\nNosso clareamento dental √© o MAIS PROCURADO do momento! Quer saber como funciona? Ou prefere conhecer nossos tratamentos de harmoniza√ß√£o facial? Estamos com promo√ß√µes IMPERD√çVEIS! ü§©",
          timestamp: new Date(),
          sentiment: 'neutral',
          hasCoupon: false
        };
      } else if (sentiment === 'negative') {
        return {
          id: Date.now().toString(),
          sender: 'bot',
          content: "Poxa, sinto muito que n√£o esteja em um bom dia. üíô Que tal investir um pouco em voc√™? Um sorriso mais bonito ou uma harmoniza√ß√£o facial pode trazer um pouco mais de alegria para seus dias. A avalia√ß√£o √© TOTALMENTE gratuita e sem compromisso! üí¨\n\nE tenho um cupom especial de 15% para voc√™ em qualquer tratamento. √â nossa forma de tentar deixar seu dia um pouquinho melhor!",
          timestamp: new Date(),
          sentiment: 'neutral',
          hasCoupon: true
        };
      } else {
        return {
          id: Date.now().toString(),
          sender: 'bot',
          content: "√ìtimo! üòä Posso ajudar com informa√ß√µes sobre nossos servi√ßos odontol√≥gicos ou est√©ticos. O que voc√™ gostaria de saber? Temos desde limpezas e clareamentos at√© harmoniza√ß√£o facial completa!",
          timestamp: new Date(),
          sentiment: 'neutral'
        };
      }
    }
    
    // Se nenhuma correspond√™ncia espec√≠fica foi encontrada e n√£o estamos em um fluxo,
    // retornamos uma resposta padr√£o de atendimento focada em vendas
    const defaultResponses = [
      "Adoramos sua mensagem! üåü Somos a cl√≠nica mais bem avaliada da regi√£o e estamos prontos para cuidar do seu sorriso com excel√™ncia. Podemos te ajudar com algum tratamento espec√≠fico?",
      "Ol√°! Estamos aqui para tornar seu sorriso ainda mais bonito! üòÅ Nossa equipe premiada tem transformado milhares de vidas. Em que podemos te ajudar hoje?",
      "Que bom te ver aqui! üíé Nossa cl√≠nica √© refer√™ncia em tratamentos de alta qualidade. Conte-nos mais sobre o que voc√™ procura e vamos encontrar a solu√ß√£o perfeita para voc√™!",
      "Seja bem-vindo(a)! üèÜ Somos especialistas em criar sorrisos de sonho. Nossos profissionais s√£o mestres em solu√ß√µes est√©ticas e odontol√≥gicas. Tem algum tratamento em mente?",
      "Obrigado pelo contato! üòä Estamos prontos para te ajudar a conquistar o sorriso dos seus sonhos. Que tal agendar uma avalia√ß√£o sem compromisso? Temos hor√°rios especiais esta semana!"
    ];
    
    const randomIndex = Math.floor(Math.random() * defaultResponses.length);
    return {
      id: Date.now().toString(),
      sender: 'bot',
      content: defaultResponses[randomIndex],
      timestamp: new Date(),
      sentiment: 'neutral'
    };
  };

  // Fun√ß√£o para detectar o sentimento do texto
  const detectSentiment = (text: string): 'positive' | 'negative' | 'neutral' => {
    const lowerText = text.toLowerCase();
    
    // Palavras positivas em portugu√™s
    const positiveWords = [
      "feliz", "bom", "√≥timo", "excelente", "maravilhoso", "incr√≠vel", "fant√°stico",
      "alegre", "animado", "satisfeito", "contente", "adorei", "gostei", "legal", 
      "bacana", "top", "show", "perfeito", "sensacional", "massa", "demais", "lindo",
      "maravilha", "adoro", "amo", "gratid√£o", "obrigado", "obrigada", "amei", "gosto",
      "bem", "felicidade", "alegria", "positivo", "esperan√ßa", "motivado", "empolgado",
      "animada", "animado", "satisfeita", "satisfeito", "tranquilo", "tranquila", "calmo",
      "calma", "paz", "relaxado", "relaxada", "sorte", "sortuda", "sortudo"
    ];
    
    // Palavras negativas em portugu√™s
    const negativeWords = [
      "triste", "ruim", "p√©ssimo", "terr√≠vel", "horr√≠vel", "raiva", "√≥dio", "detesto",
      "irritado", "irritada", "chateado", "chateada", "frustrado", "frustrada", "medo",
      "receio", "ansioso", "ansiosa", "preocupado", "preocupada", "nervoso", "nervosa",
      "estressado", "estressada", "infeliz", "insatisfeito", "insatisfeita", "decepcionado",
      "decepcionada", "aborrecido", "aborrecida", "mal", "pior", "droga", "merda", "porcaria",
      "feio", "feia", "desanimado", "desanimada", "desmotivado", "desmotivada", "carregado",
      "tensa", "tenso", "deprimido", "deprimida", "angustiado", "angustiada", "aflito",
      "aflita", "dor", "sofrimento", "desespero", "desesperado", "desesperada", "dif√≠cil"
    ];
    
    let positiveScore = 0;
    let negativeScore = 0;
    
    // Analisa palavras positivas
    for (const word of positiveWords) {
      if (lowerText.includes(word)) {
        positiveScore++;
      }
    }
    
    // Analisa palavras negativas
    for (const word of negativeWords) {
      if (lowerText.includes(word)) {
        negativeScore++;
      }
    }
    
    // Verifica se h√° nega√ß√£o que inverte o sentimento
    const negationWords = ["n√£o", "nem", "nunca", "jamais", "nenhum", "nenhuma"];
    for (const negation of negationWords) {
      // Se houver nega√ß√£o pr√≥xima a palavras positivas, reduz o score positivo
      for (const word of positiveWords) {
        if (lowerText.includes(`${negation} ${word}`) || 
            lowerText.includes(`${negation} √© ${word}`) || 
            lowerText.includes(`${negation} est√° ${word}`)) {
          positiveScore--;
          negativeScore++;
        }
      }
      
      // Se houver nega√ß√£o pr√≥xima a palavras negativas, reduz o score negativo
      for (const word of negativeWords) {
        if (lowerText.includes(`${negation} ${word}`) || 
            lowerText.includes(`${negation} √© ${word}`) || 
            lowerText.includes(`${negation} est√° ${word}`)) {
          negativeScore--;
          positiveScore++;
        }
      }
    }
    
    // Determina o sentimento com base nos scores
    if (positiveScore > negativeScore && positiveScore > 0) {
      return 'positive';
    } else if (negativeScore > positiveScore && negativeScore > 0) {
      return 'negative';
    } else {
      return 'neutral';
    }
  };

  // Envia a mensagem e simula uma resposta do chatbot
  const handleSendMessage = () => {
    if (!input.trim()) return;
    
    // Adiciona a mensagem do usu√°rio
    const userMessage: Message = {
      id: Date.now().toString(),
      sender: 'user',
      content: input,
      timestamp: new Date(),
      sentiment: 'neutral'
    };
    
    setMessages(prev => [...prev, userMessage]);
    setInput("");
    
    // Detecta o sentimento do texto
    const sentiment = detectSentiment(input);
    
    // Simula o chatbot digitando
    setIsTyping(true);
    
    // Gera a resposta do chatbot ap√≥s um pequeno delay
    setTimeout(() => {
      const botResponse = generateHumanizedResponse(input, sentiment);
      setMessages(prev => [...prev, botResponse]);
      setIsTyping(false);
    }, 1500);
  };

  // Renderiza√ß√£o do componente
  return (
    <Card className="w-full max-w-4xl mx-auto">
      <CardHeader className="border-b">
        <CardTitle className="flex items-center gap-2">
          <MessageSquare className="h-5 w-5" />
          Chat com a Cl√≠nica
        </CardTitle>
      </CardHeader>
      <CardContent className="p-0">
        <ScrollArea className="h-[500px] p-4">
          {messages.map((message) => (
            <div
              key={message.id}
              className={`flex ${
                message.sender === 'user' ? 'justify-end' : 'justify-start'
              } mb-4`}
            >
              <div
                className={`max-w-[85%] rounded-lg px-3 py-2 ${
                  message.sender === 'user'
                    ? message.sentiment === 'negative'
                      ? 'bg-red-500 text-primary-foreground'
                      : message.sentiment === 'positive'
                        ? 'bg-green-500 text-primary-foreground'
                        : 'bg-primary text-primary-foreground'
                    : 'bg-muted'
                }`}
              >
                <div className="flex items-center gap-2 mb-1">
                  {message.sender === 'user' ? (
                    <User className="h-3 w-3" />
                  ) : (
                    <Bot className="h-3 w-3" />
                  )}
                  <span className="text-xs font-medium">
                    {message.sender === 'user' ? 'Voc√™' : 'Assistente'}
                  </span>
                  {message.confidence && (
                    <Badge variant="outline" className="ml-1 text-xs">
                      {message.confidence}% correspond√™ncia
                    </Badge>
                  )}
                </div>
                
                <div className="whitespace-pre-wrap">{message.content}</div>
                
                {/* Componentes condicionais se necess√°rio */}
                
                {/* Cupom de desconto */}
                {message.hasCoupon && (
                  <div className="mt-2 p-2 bg-yellow-100 rounded-md border border-yellow-300">
                    <div className="flex items-center gap-2 mb-1">
                      <Gift className="h-3 w-3 text-yellow-700" />
                      <span className="text-xs font-medium text-yellow-700">Cupom de Desconto</span>
                    </div>
                    <p className="text-sm font-bold text-center text-yellow-700">SORRIA15</p>
                    <p className="text-xs text-center text-yellow-700">15% de desconto no pr√≥ximo atendimento</p>
                  </div>
                )}
                
                <p className="text-xs opacity-70 mt-1 text-right">
                  {formatTimeAgo(message.timestamp)}
                </p>
              </div>
            </div>
          ))}
          
          {isTyping && (
            <div className="flex justify-start">
              <div className="max-w-[80%] rounded-lg px-3 py-2 bg-muted">
                <div className="flex items-center gap-2 mb-1">
                  <Bot className="h-3 w-3" />
                  <span className="text-xs font-medium">Assistente</span>
                </div>
                <div className="flex items-center gap-1">
                  <div className="w-2 h-2 rounded-full bg-primary animate-bounce" style={{ animationDelay: '0ms' }}></div>
                  <div className="w-2 h-2 rounded-full bg-primary animate-bounce" style={{ animationDelay: '200ms' }}></div>
                  <div className="w-2 h-2 rounded-full bg-primary animate-bounce" style={{ animationDelay: '400ms' }}></div>
                </div>
              </div>
            </div>
          )}
          
          <div ref={messagesEndRef} />
        </ScrollArea>
      </CardContent>
      <CardFooter className="border-t p-2">
        <div className="flex w-full items-center gap-2">
          <Input
            placeholder="Digite sua mensagem..."
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={(e) => e.key === 'Enter' && !isTyping && handleSendMessage()}
            className="flex-1"
          />
          <Button 
            onClick={handleSendMessage} 
            disabled={isTyping}
            size="icon"
            className="shrink-0"
          >
            <Send className="h-4 w-4" />
          </Button>
        </div>
      </CardFooter>
    </Card>
  );
}